name: CI

on:
  push:
    paths-ignore:
      - ".gitignore"
      - ".readthedocs.yaml"
      - "README.rst"
  pull_request:
    paths-ignore:
      - ".gitignore"
      - ".readthedocs.yaml"
      - "README.rst"

env:
  PYTEST_DISCORD_WEBHOOK: ${{ secrets.PYTEST_DISCORD_WEBHOOK }}

jobs:
  build-package:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.event_name }}-${{ github.workflow }}-${{ github.ref_name }}-build-pkg
      cancel-in-progress: true
    timeout-minutes: 20
    container:
      image: ghcr.io/thombashi/python-ci:3.11

    steps:
      - uses: actions/checkout@v4

      - run: make build

  build-docs:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.event_name }}-${{ github.workflow }}-${{ github.ref_name }}-build-docs
      cancel-in-progress: true
    timeout-minutes: 20
    container:
      image: ghcr.io/thombashi/python-ci:3.11

    steps:
      - uses: actions/checkout@v4

      - run: make docs

  lint:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.event_name }}-${{ github.workflow }}-${{ github.ref_name }}-lint
      cancel-in-progress: true
    timeout-minutes: 20
    container:
      image: ghcr.io/thombashi/python-ci:3.11

    steps:
      - uses: actions/checkout@v4

      - run: make check

  unit-test:
    runs-on: ${{ matrix.os }}
    concurrency:
      group: ${{ github.event_name }}-${{ github.workflow }}-${{ github.ref_name }}-ut-${{ matrix.os }}-${{ matrix.python-version }}
      cancel-in-progress: true
    strategy:
      fail-fast: false
      matrix:
        python-version:
          ["pypy3.10", "3.9", "3.10", "3.11", "3.12", "3.13"]
        os: [ubuntu-latest, macos-latest, windows-latest]
        exclude:
          - os: macos-latest
            python-version: "pypy3.10"
          - os: windows-latest
            python-version: "pypy3.10"

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: |
            setup.py
            **/*requirements.txt
            tox.ini

      - name: Install pip
        run: python -m pip install --upgrade --disable-pip-version-check "pip>=21.1"

      - run: make setup-ci

      - run: make test
        timeout-minutes: 20

  coverage:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.event_name }}-${{ github.workflow }}-${{ github.ref_name }}-coverage
      cancel-in-progress: true
    timeout-minutes: 20

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: pip
          cache-dependency-path: |
            setup.py
            **/*requirements.txt
            tox.ini

      - run: make setup-ci

      - name: Run tests
        run: tox -e cov

      - name: Upload coverage report
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python -m pip install --upgrade --disable-pip-version-check coveralls tomli
          coveralls --service=github

  smoke-examples:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.event_name }}-${{ github.workflow }}-${{ github.ref_name }}-ex
      cancel-in-progress: true
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip
          cache-dependency-path: |
            setup.py
            **/*requirements.txt

      - name: Install dependencies
        run: python -m pip install --upgrade --disable-pip-version-check .[all] jupyter tblfaker

      - name: Run examples
        run: |
          set -eux

          for f in $(find examples/py -type f -name "*.py" | grep -v elasticsearch); do
            python "$f"
          done

          for f in examples/ipynb/*.ipynb; do
            jupyter execute "$f"
          done
